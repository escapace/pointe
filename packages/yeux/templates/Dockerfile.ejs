FROM quay.io/centos/centos:stream9
ARG USERNAME=node
ARG UID=1000
ARG GID=1000
ARG GOSU_VERSION=1.14
ARG NODE_VERSION=17.9.0
<% if (packageManager === 'pnpm') { %>ARG PNPM_VERSION=6.32.8<% } %>
<% if (packageManager === 'npm') { %>ARG NPM_VERSION=8.5.3<% } %>

RUN set -eux; \
  export GNUPGHOME="$(mktemp -d)"; \
  export ARCH="$(uname -m)"; \
  case "$ARCH" in \
    x86_64) ARCH="amd64";; \
    aarch64) ARCH="arm64";; \
    *) echo "unsupported architecture"; exit 1 ;; \
  esac; \
  dnf update -y; \
  dnf install -y --allowerasing ca-certificates curl gnupg dirmngr xz libatomic; \
  curl -fsSL --compressed -o /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$ARCH"; \
  curl -fsSL --compressed -o /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$ARCH.asc"; \
  gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \
  gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \
  gpgconf --kill all; \
  chmod +x /usr/local/bin/gosu; \
  gosu nobody true; \
  export ARCH="$(uname -m)"; \
  case "$ARCH" in \
    x86_64) ARCH="x64";; \
    aarch64) ARCH="arm64";; \
    *) echo "unsupported architecture"; exit 1 ;; \
  esac; \
  for key in \
    4ED778F539E3634C779C87C6D7062848A1AB005C \
    141F07595B7B3FFE74309A937405533BE57C7D57 \
    94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \
    74F12602B6F1C4E913FAA37AD3A89613643B6201 \
    71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \
    8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \
    C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \
    C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C \
    DD8F2338BAE7501E3DD5AC78C273792F7D83545D \
    A48C2BEE680E841632CD4E44F07496B3EB3C1762 \
    108F52B48DB57BB0CC439B2997B01419BD92F80A \
    B9E2F5981AA6E0CD28160D9FF13993A75599653C \
  ; do \
    gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys "$key" || \
    gpg --batch --keyserver keyserver.ubuntu.com --recv-keys "$key"; \
  done; \
  curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz"; \
  curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"; \
  gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc; \
  grep " node-v$NODE_VERSION-linux-$ARCH.tar.xz\$" SHASUMS256.txt | sha256sum -c -; \
  tar -xJf "node-v$NODE_VERSION-linux-$ARCH.tar.xz" -C /usr/local --strip-components=1 --no-same-owner; \
  ln -s /usr/local/bin/node /usr/local/bin/nodejs; \
  rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc "node-v$NODE_VERSION-linux-$ARCH.tar.xz" SHASUMS256.txt.asc SHASUMS256.txt; \
  dnf --assumeyes clean all; \
  groupadd --gid=$GID node; \
  useradd --shell=/bin/sh --uid=$UID -g node node; \
  mkdir -p /opt/app; \
  chmod 770 /opt/app; \
  chown $UID:$GID /opt/app; \
  <% if (packageManager === 'pnpm') { %>npm install -g pnpm@$PNPM_VERSION; \<% } %><% if (packageManager === 'npm') { %>npm install -g npm@$NPM_VERSION; \<% } %>
  gosu --version; \
  node --version; \
  <% if (packageManager === 'pnpm') { %>pnpm --version<% } %><% if (packageManager === 'npm') { %>npm --version<% } %>

WORKDIR /opt/app
COPY --chown=$UID:$GID . /opt/app
COPY --chown=root:root docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh
<% if (packageManager === 'npm') { %>RUN /usr/local/bin/gosu "$UID:$GID" npm ci<% } %><% if (packageManager === 'pnpm') { %>RUN /usr/local/bin/gosu "$UID:$GID" pnpm install --prod --frozen-lockfile<% } %>

ENTRYPOINT ["/usr/local/bin/docker-entrypoint.sh"]
CMD ["index.mjs"]
